#!/usr/bin/env ruby
require 'gli'
require 'rainbow'
require 'veye'

include GLI::App


program_desc 'VersionEye commandline tool'

version Veye::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]


public_api = Veye::API::Resource.new

desc 'check service status'
arg_name 'Describe arguments to ping here'
command :ping do |c|
  c.flag :f
  c.action do |global_options,options,args|
	response = public_api.getJSON('/ping.json')
  	unless response.nil?
  		puts response.to_s.foreground(:green)
  	else
		puts "down".foreground(:red)
  	end
  end
end

desc 'Describe search here'
arg_name 'Describe arguments to search here'
command :search do |c|
  c.action do |global_options,options,args|
    puts "search command ran"
  end
end

desc 'Describe info here'
arg_name 'Describe arguments to info here'
command :info do |c|
  c.action do |global_options,options,args|
    puts "info command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
